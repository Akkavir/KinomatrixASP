@model List<MovieInteraction>
@using Microsoft.AspNetCore.WebUtilities

@{
    ViewData["Title"] = "Your Profile";
}
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <link rel="icon" type="image/png" sizes="32x32" href="favicon-32x32.png">


    <style>


        a {
        text-decoration: none;
        color: inherit;
        }
        #usercontent {
        width: 130%;
        gap: 20px;
        margin-top: 50px;
        height: auto;
        align-items: center;
        justify-content: center;
        margin: auto;
        border-radius: 10px;
        padding-top: 5%;
        padding-bottom: 5%;
        }

        button:hover {
        background-color: #d1334a;
        }

        #genres {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
        }

        #genres span {
        background: black;
        border: none;
        padding: 15px 25px;
        margin: 7px;
        cursor: pointer;
        border-radius: 10px;
        }

        #genres span:hover {
        background: #d1334a;
        }

        #genres-label {
            margin-right: 10px;
            font-size: 16px;
            vertical-align: middle;
        }
        #genres span:last-child {
    background-color: #333;
    font-weight: bold;
}



        body {
        background: #111;
        color: white;
        font-family: Arial, sans-serif;
        display: flex;
        align-items: flex-start; /* Changed from 'center' to 'flex-start' */
        justify-content: center; /* Kept as 'center' for horizontal centering */
        height: 100vh;
        margin: 0;
        }

    </style>
    <script>

        function GoBack(){
        window.location.href = "/";
        }

    </script>

</head>
<body>

    <button id="thebutton" onclick="GoBack()" href="/">
        Back
    </button>
    <div id="usercontent" class="container mt-4">
        @{
            var genreCounts = new Dictionary<string, int>(StringComparer.OrdinalIgnoreCase);

            foreach (var item in Model)
            {
                if (item.Rating.HasValue && item.Rating > 7)
                {
                    if (!string.IsNullOrEmpty(item.Genres))
                    {
                        var genres = item.Genres.Split(',', StringSplitOptions.RemoveEmptyEntries);
                        foreach (var genre in genres)
                        {
                            var trimmed = genre.Trim();
                            if (genreCounts.ContainsKey(trimmed))
                                genreCounts[trimmed]++;
                            else
                                genreCounts[trimmed] = 1;
                        }
                    }
                }
            }

            var topGenres = genreCounts
            .OrderByDescending(g => g.Value)
            .Take(3)
            .Select(g => g.Key)
            .ToList();
        }

        <div class="d-flex justify-content-between align-items-center mb-4 w-100">
            <h2>Hi, @User.Identity.Name</h2>
            <div class="d-flex align-items-center">
                @if (topGenres.Any())
                {
                    <div class="me-3 text-white">
                        <strong>Your top genres:</strong>
                    </div>
                }
                <div id="genres">
                    @foreach (var genre in topGenres)
                    {
                        <span onclick="window.location.href='https://www.imdb.com/search/title/?title_type=feature,tv_movie,tv_special,video,tv_series,tv_miniseries&genres=@genre.ToLower()'">
                            @genre
                        </span>
                    }

                    @if (topGenres.Count >= 2)
                    {
                        var joinedGenres = string.Join(",", topGenres.Select(g => g.ToLower()));
                        <span style="background: #333;" onclick="window.location.href='https://www.imdb.com/search/title/?title_type=feature,tv_movie,tv_special,video,tv_series,tv_miniseries&genres=@joinedGenres'">
                            Recommend
                        </span>
                    }
                </div>

                <div class="vr mx-2"></div>

                <form method="post" action="/Account/Logout" class="ms-3">
                    <button class="btn btn-danger" type="submit">Logout</button>
                </form>
            </div>

        </div>


        @{
            string currentSortBy = Context.Request.Query["sortBy"];
            string currentSortOrder = Context.Request.Query["sortOrder"];

            Func<string, string> sortIcon = (field) =>
            {
                if (currentSortBy == field)
                {
                    return currentSortOrder == "asc"
                ? "<i class=\"fas fa-arrow-up\"></i>"
                : "<i class=\"fas fa-arrow-down\"></i>";
                }
                return "";
            };


            Func<string, string> nextOrder = (field) =>
            (currentSortBy == field && currentSortOrder == "asc") ? "desc" : "asc";
        }


        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        <a href="@Url.Action("Profile", new { sortBy = "MovieId", sortOrder = nextOrder("MovieId") })">
                            Movie Title @Html.Raw(sortIcon("MovieId"))
                        </a>
                    </th>
                    <th>
                        <a href="@Url.Action("Profile", new { sortBy = "Rating", sortOrder = nextOrder("Rating") })">
                            Rating @Html.Raw(sortIcon("Rating"))
                        </a>
                    </th>
                    <th>
                        <a href="@Url.Action("Profile", new { sortBy = "InWatchlist", sortOrder = nextOrder("InWatchlist") })">
                            Watchlist @Html.Raw(sortIcon("InWatchlist"))
                        </a>
                    </th>
                    <th>
                        Genres
                    </th>
                    <th>
                        <a href="@Url.Action("Profile", new { sortBy = "DateTime", sortOrder = nextOrder("DateTime") })">
                            Last Modified @Html.Raw(sortIcon("DateTime"))
                        </a>
                    </th>
                    <th></th>
                </tr>
            </thead>


            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <a href="/Movies/GetMovie?title=@item.MovieId">@item.MovieId</a>
                        </td>
                        <td>@(item.Rating?.ToString() ?? "-")</td>
                        <td>@(item.InWatchlist ? "✅" : "-")</td>
						<td>@item.Genres</td>
                        <td>@item.DateTime.ToString("g")</td>
                        <td>
                            <form method="post" asp-action="Delete" asp-controller="User">
                                <input type="hidden" name="id" value="@item.Id" />
                                <button class="btn btn-sm btn-outline-danger" type="submit">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</body>
